#!/usr/bin/env bash
_script="$(readlink -f ${BASH_SOURCE[0]})"
_base="$(dirname $(dirname $_script))"

VERSION=$(cat ${_base}/VERSION)

_output=1
_outputf=""

if [ "$#" -ne 0 ];
then
    :
else
    printf "Requires args, run blackrose -h\n";
    exit 1;
fi

for arg in $@
do
    case $arg in
        $0) ;;
        '-v' | '--version') printf "[ Black Rose programming language ]\nVersion: $VERSION \n" && exit 0;;
        '-V' | '--version-number') printf "$VERSION\n" && exit 0;;
        '-i' | '--interactive') ${_base}/target/release/blackrose ;;
        '-d' | '--documentation' | 'docs') ${_base}/docs/docs.py ${VERSION} ;;
        '-o' | '--output') _output=0 ;;
        '-u' | '--update' | 'update')
            cd $(dirname ${_base})
            rm -rfv ${_base}
            git clone -b stable --single-branch https://github.com/Alfriadox/BlackRose.git
            cd ${_base}
            make
            exit $?
            ;;
        '--update-master')
            cd $(dirname ${_base})
            rm -rfv ${_base}
            git clone -b master --single-branch https://github.com/Alfriadox/BlackRose.git
            cd ${_base}
            make
            exit $?
            ;;
        '-h' | '--help' | '-?' | '--usage') printf """
BlackRose
usage:
  blackrose [args] [file.rose]

Arguments:
    -v, --version                        : Prints version info and exits
    -V, --version-number                 : Prints just version number and exit
    -h, --help, -?, --usage              : Prints this help and exits
    -i, --interactive                    : Run interactively in the terminal
    -d, --documentation, docs            : Opens documentation interface
    -u, --update, update                 : Update Black Rose to stable branch and exit
      --update-master                  : update Black Rose to master (maybe unstable) and exit
    -o, --output <filename.radon>        : compiles file.rose to file.radon bytecode and exits.
    \n""" && exit 0;;
        *)  if [ -f "$arg" ];
            then
                if [ ${_outputf} -ne "" ]; then
                    touch ${_outputf}
                    ${_base}/target/release/blackrose ${arg} ${_outputf}
                else
                    printf "An output file must be specified!" && exit 1
                fi
            else
                if [ ${_output} == 0 ]; then
                    _outputf="$arg"
                    _output=1
                else
                    printf "$arg is not a recognized argument.\n" && exit 1
                fi
            fi ;;
    esac
done
