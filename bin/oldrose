#!/usr/bin/env bash
_script="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
_base="$(dirname ${_script})"

VERSION=$(cat ${_base}/VERSION)

_output=0
_outputf=0
_output_file=0
_optimize=0                 # Only use this file for Travis CI

if [ "$#" -ne 0 ];
then
    :
else
    printf "Requires args, run oldrose -h\n";
    exit 1;
fi

for arg in $@
do
    case ${arg} in
        $0) ;;
        '-v' | '--version') printf "[ Black Rose programming language ]\nVersion: $VERSION \n" && exit 0;;
        '-V' | '--version-number') printf "$VERSION\n" && exit 0;;
        '-i' | '--interactive') ${_base}/BlackRose/target/release/blackrose ;;
        '-d' | '--documentation' | 'docs') python3.5 ${_base}/docs/docs.py ${VERSION} ;;
        '-o' | '--output') _output=1 ;;
        '-O' | '--compile-optimized') _optimize=2;;
        '-I' | '--interpret') _optimize=1;;
        '--emit-rust-debug') _optimize=3;;
        '--emit-rust-optimized') _optimize=4;;
        '-h' | '--help' | '-?' | '--usage') printf """
BlackRose
usage:
    oldrose [args] [file.rose]

Arguments:
    -v, --version                        : Prints version info and exits
    -V, --version-number                 : Prints just version number and exit
    -h, --help, -?, --usage              : Prints this help and exits
    -i, --interactive                    : Run interactively in the terminal
    -I, --interpret                      : Interprets and runs via a tree walk interpreter.
                                            (does not compile.)
    -d, --documentation, docs            : Opens documentation interface
    -o, --output <filename>              : compiles file.rose and exits. (debug by defualt)
    -O, --compile-optimized              : optimizes output and compilation
    --emit-rust-debug                    : compiles to rust without optimization
    --emit-rust-optimize                 : compiles to rust with optimization
    \n""" && exit 0;;
        *)
            if [ ${_output} == 1 ]; then
                if [ ${_output_file} == 1 ];
                then
                    mv ${_outputf} ${arg}
                    _output=0
                else
                    touch ${arg}
                    _outputf=${arg}
                    _output_file=1
                    _output=0
                fi
            else
                if [ -e "$arg" ];
                then
                    if [ ${_output_file} == 1 ];
                    then
                        :
                    else
                        _outputf=${arg}
                        touch ${_outputf}
                        _output_file=1
                    fi
                    ${_base}/BlackRose/target/release/blackrose ${arg} ${_outputf} ${_optimize}
                else
                    printf "$arg is not a valid argument! \n"
                fi
            fi;;
    esac
done
